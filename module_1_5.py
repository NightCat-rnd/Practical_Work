# Практическое задание по уроку - Неизменяемые и изменяемые объекты. Кортежи
# Выполнил Андрей Чекунов

immutable_var = (1,2,3,4,5,'dog','cat',5.2,[1,2,3])
#print(type(immutable_var))
print(immutable_var)
# immutable_var[2] = 33 такая конструкция не работает, т.к. данные в кортеже неизменяемые
immutable_var[8][1] = 33 # это работает, т.к. мы меняем данные в списке, который находится в кортеже, т.е. формально кортеж остается неизменным
print(immutable_var)

mutable_list = [1,2,3,4,5,'dog','chery']
print(mutable_list)
mutable_list[1:3] = 20,30
print(mutable_list)


# ------формально выполнение задания здесь завершено--------------------------
print('------------------\n')
# можно кортеж преобразовать в список, и его изменить
# после чего удалить кортеж, а потом преобразовать список в кортеж со старым именем
# таким образом мы получим другой(измененный) кортеж с прежним именем
# зачем так делать, не знаю :)
# и подозреваю, что кортеж будет по каким то идентификаторам другой,
# но имя у него останется прежнее, как это проверить, еще не знаю,
# доступа к памяти на питоне, как на Си нет, как я понял
temp_list = list(immutable_var)
print(type(temp_list))
print('temp_list')
print(temp_list)
temp_list[0:5] = 10,20,30,40,50
print('temp_list')
print(temp_list)
print(id(immutable_var))
del immutable_var
immutable_var = tuple(temp_list)
print(id(immutable_var))
print(immutable_var)

# нельзя изменить содержимое кортежа поэлементно,
# но можно тупо переназначить кортеж!!!
# как и почему? или внутри виртуальной машины это разные кортежи?
print('\n')
new_tuple = (1,2,3,4,5,6,7,8,9,0)
print(new_tuple)
print(id(new_tuple))
new_tuple = (10,20,30,40,50,60,'переназначение кортежа')
print(new_tuple)
print(id(new_tuple))
