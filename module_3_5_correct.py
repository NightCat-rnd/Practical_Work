# Самостоятельная работа по уроку "Рекурсия"
# Выполнил Андрей Чекунов

'''
Задача "Рекурсивное умножение цифр":
Напиши функцию get_multiplied_digits, которая принимает аргумент целое число number и подсчитывает произведение
цифр этого числа.

Пункты задачи:
Напишите функцию get_multiplied_digits и параметр number в ней.
Создайте переменную str_number и запишите строковое представление(str) числа number в неё.
Основной задачей будет отделение первой цифры в числе: создайте переменную first и запишите в неё первый символ из
str_number в числовом представлении(int).
Возвращайте значение first * get_multiplied_digits(int(str_number[1:])). Таким образом вы умножите первую цифру числа
на результат работы этой же функции с числом, но уже без первой цифры.
4 пункт можно выполнить только тогда, когда длина str_number больше 1, т.к. в противном случае не получиться взять
срез str_number[1:].
Если же длина str_number не больше 1, тогда вернуть оставшуюся цифру first.
Стек вызовов будет выглядеть следующим образом:
get_multiplied_digits(40203) -> 4 * get_multiplied_digits(203) -> 4 * 2 * get_multiplied_digits(3) -> 4 * 2 * 3

Пример результата выполнения программы:
Исходный код:
result = get_multiplied_digits(40203)
print(result)
Вывод на консоль:
24
'''

def get_multiplied_digits(number):
    str_number = str(number)
#   задание: "Напиши функцию get_multiplied_digits, которая принимает аргумент целое число number
#   и подсчитывает произведение цифр этого числа."
#   '0' - это цифра и если она присутствует в числе, то дальше нет смысла считать , т.к. любое произведение на '0' даст ноль
    if '0' in str_number:
        return 0
#   если убрать условие выше, то будет работать как в вашем задании, но на мой взгляд не правильно
    first = int(str_number[0])
    if len(str_number[1:]) > 0:
        return first * get_multiplied_digits(int(str_number[1:]))
    else:
        return first


result = get_multiplied_digits(40203)  # если убрать условие проверки на присутствие нуля в числе, то работает как и
                                        #  тестовом задании
print(result)
result = get_multiplied_digits(402030)  # с убранным условием проверки на присутствие нуля в числе,
                                        # если число оканчивается нулем то результат 0. Т.е. проверка на
                                        #  присутствие нуля в составе числа - необходимое условие,
                                        # но это и по правилам математики так
print(result)
result = get_multiplied_digits(423)  # Моя реализация вашего примера без цифры '0' дает правильный результат
print(result)
result = get_multiplied_digits(22222)  # т.к. я хорошо знаю степени 2ки, то перемножаем числа из '2' для проверки
print(result)
result = get_multiplied_digits(2222222222)
print(result)
result = get_multiplied_digits(402030023409723)  #
print(result)
result = get_multiplied_digits(423582743158753243)  #
print(result)
